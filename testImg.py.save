import numpy as np
import cv2
import sys
import time
import logging

cap = cv2.VideoCapture(0)
cap.set(3, 600)
cap.set(4, 480)
time.sleep(4)

sigma = 0.33


def nothing(x):
    pass

if(cap):
    ret, img = cap.read()
    v = np.median(img)
    imgray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    imgray = cv2.GaussianBlur(imgray, (21, 21), 0)

    #if firstFrame is None:
    #	firstFrame = imgray
    #	continue

    #frameDelta = cv2.absdiff(firstFrame, imgray)
    high_thresh, thresh = cv2.threshold(imgray, 40, 200, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)
    thresh = cv2.dilate(thresh, None, iterations=2)
    lower = max(0, (1.0 - sigma) * v)
    upper = min(255, (1.0 + sigma) * v)
    edges = cv2.Canny(img, lower, upper)
    contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    for cnt in contours:
        x,y,w,h = cv2.boundingRect(cnt)
        rect = cv2.minAreaRect(cnt)
        box = cv2.cv.BoxPoints(rect)
        box = np.int0(box)
        cv2.drawContours(img, [box], 0, (0, 255, 0), 1)
        print("{0}x{1}".format(w, h))
        cv2.imwrite('demo.jpg', img)
    cap.release()
#cv2.imshow("Binary", thresh)
#cv2.imshow("Canny", edges)
#cv2.imshow("Frame Delta", frameDelta)
#cv2.imshow("frame", img)
#if(cv2.waitKey(1) & 0xFF == ord('q')):
#break
